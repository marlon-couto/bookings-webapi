// <auto-generated />
using System;
using BookingsWebApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookingsWebApi.Migrations
{
    [DbContext(typeof(BookingsDbContext))]
    [Migration("20240820232645_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookingsWebApi.Models.BookingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GuestQuantity")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5c75464d-b6cc-4f5c-927b-e324935dc0c1"),
                            CheckIn = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5506),
                            CheckOut = new DateTime(2024, 8, 21, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5507),
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5514),
                            GuestQuantity = 1,
                            IsDeleted = false,
                            RoomId = new Guid("cdd0c01b-d226-4c98-93ac-1aa199b55d3c"),
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5504),
                            UserId = new Guid("05a347ae-1367-4e3b-b805-def7e8d901a6")
                        },
                        new
                        {
                            Id = new Guid("8671b4af-0a11-45a6-8a23-a32f5890bbf9"),
                            CheckIn = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5517),
                            CheckOut = new DateTime(2024, 8, 21, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5518),
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5521),
                            GuestQuantity = 1,
                            IsDeleted = false,
                            RoomId = new Guid("5a568cf4-7b13-4e22-8779-1fffb3e13d50"),
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5516),
                            UserId = new Guid("05a347ae-1367-4e3b-b805-def7e8d901a6")
                        },
                        new
                        {
                            Id = new Guid("0300ec2e-bb50-4542-8aa2-167ea2721dc6"),
                            CheckIn = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5524),
                            CheckOut = new DateTime(2024, 8, 21, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5525),
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5527),
                            GuestQuantity = 1,
                            IsDeleted = false,
                            RoomId = new Guid("7fd47a35-252b-4c1d-85cd-ba11629ade88"),
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5522),
                            UserId = new Guid("498435d1-be9c-4f7f-8832-b3b043915c76")
                        },
                        new
                        {
                            Id = new Guid("ed87365b-ff61-48f3-a7d5-b263a352c381"),
                            CheckIn = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5531),
                            CheckOut = new DateTime(2024, 8, 21, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5532),
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5534),
                            GuestQuantity = 1,
                            IsDeleted = false,
                            RoomId = new Guid("d7df68b1-b57e-4626-8f91-9c9b9afd16f8"),
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5529),
                            UserId = new Guid("498435d1-be9c-4f7f-8832-b3b043915c76")
                        });
                });

            modelBuilder.Entity("BookingsWebApi.Models.CityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca4c3b99-c156-40b9-b3e2-9616d5cf05d2"),
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5434),
                            IsDeleted = false,
                            Name = "City 1",
                            State = "State 1",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5431)
                        },
                        new
                        {
                            Id = new Guid("1e1ca2ff-eadb-45fd-a9c0-49384900f40b"),
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5439),
                            IsDeleted = false,
                            Name = "City 2",
                            State = "State 2",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5435)
                        });
                });

            modelBuilder.Entity("BookingsWebApi.Models.HotelModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b86aeb7a-a1a0-49ff-b9cb-5ff6ec7f7302"),
                            Address = "Address 1",
                            CityId = new Guid("ca4c3b99-c156-40b9-b3e2-9616d5cf05d2"),
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5453),
                            IsDeleted = false,
                            Name = "Hotel 1",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5449)
                        },
                        new
                        {
                            Id = new Guid("8c2ef74e-6c01-432d-b349-7867d112ba62"),
                            Address = "Address 2",
                            CityId = new Guid("1e1ca2ff-eadb-45fd-a9c0-49384900f40b"),
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5457),
                            IsDeleted = false,
                            Name = "Hotel 2",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5454)
                        });
                });

            modelBuilder.Entity("BookingsWebApi.Models.RoomModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cdd0c01b-d226-4c98-93ac-1aa199b55d3c"),
                            Capacity = 2,
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5471),
                            HotelId = new Guid("b86aeb7a-a1a0-49ff-b9cb-5ff6ec7f7302"),
                            Image = "Image 1",
                            IsDeleted = false,
                            Name = "Room 1",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5467)
                        },
                        new
                        {
                            Id = new Guid("7fd47a35-252b-4c1d-85cd-ba11629ade88"),
                            Capacity = 1,
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5476),
                            HotelId = new Guid("b86aeb7a-a1a0-49ff-b9cb-5ff6ec7f7302"),
                            Image = "Image 2",
                            IsDeleted = false,
                            Name = "Room 2",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5473)
                        },
                        new
                        {
                            Id = new Guid("7da42056-e3bd-4aae-8831-db637bb0a41e"),
                            Capacity = 3,
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5480),
                            HotelId = new Guid("b86aeb7a-a1a0-49ff-b9cb-5ff6ec7f7302"),
                            Image = "Image 3",
                            IsDeleted = false,
                            Name = "Room 3",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5478)
                        },
                        new
                        {
                            Id = new Guid("5a568cf4-7b13-4e22-8779-1fffb3e13d50"),
                            Capacity = 2,
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5484),
                            HotelId = new Guid("8c2ef74e-6c01-432d-b349-7867d112ba62"),
                            Image = "Image 4",
                            IsDeleted = false,
                            Name = "Room 4",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5482)
                        },
                        new
                        {
                            Id = new Guid("d7df68b1-b57e-4626-8f91-9c9b9afd16f8"),
                            Capacity = 1,
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5488),
                            HotelId = new Guid("8c2ef74e-6c01-432d-b349-7867d112ba62"),
                            Image = "Image 5",
                            IsDeleted = false,
                            Name = "Room 5",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5485)
                        },
                        new
                        {
                            Id = new Guid("9aba51ec-a386-4697-8d0f-9487ae7d5516"),
                            Capacity = 3,
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5492),
                            HotelId = new Guid("8c2ef74e-6c01-432d-b349-7867d112ba62"),
                            Image = "Image 6",
                            IsDeleted = false,
                            Name = "Room 6",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5489)
                        });
                });

            modelBuilder.Entity("BookingsWebApi.Models.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05a347ae-1367-4e3b-b805-def7e8d901a6"),
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5301),
                            Email = "user1@mail.com",
                            IsDeleted = false,
                            Name = "User 1",
                            Password = "Of5n7kc14AwibmiFXk5ZnyDbioxlCiqxcZr7ayc/ad4=",
                            Role = "Client",
                            Salt = "RDsG9pM5F0tj6ZIU2UogSA==",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5261)
                        },
                        new
                        {
                            Id = new Guid("498435d1-be9c-4f7f-8832-b3b043915c76"),
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5306),
                            Email = "user2@mail.com",
                            IsDeleted = false,
                            Name = "User 2",
                            Password = "7eyPpIQlkJGpp/lfFJuSeJ3IZbo5DznSu/C1VG7JO9I=",
                            Role = "Client",
                            Salt = "Gqude0JZ38YVvz/RUTeZ9w==",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5302)
                        },
                        new
                        {
                            Id = new Guid("6eff8e4c-a440-44ef-a001-6a4f4fa5f102"),
                            CreatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5311),
                            Email = "user3@mail.com",
                            IsDeleted = false,
                            Name = "User 3",
                            Password = "sT+OPanSmual937atM35GfT2Xp1w5yPXpTBA4U8JdEo=",
                            Role = "Admin",
                            Salt = "pWIyxOGXD5363rNbX0ASfg==",
                            UpdatedAt = new DateTime(2024, 8, 20, 23, 26, 45, 667, DateTimeKind.Utc).AddTicks(5308)
                        });
                });

            modelBuilder.Entity("BookingsWebApi.Models.BookingModel", b =>
                {
                    b.HasOne("BookingsWebApi.Models.RoomModel", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingsWebApi.Models.UserModel", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookingsWebApi.Models.HotelModel", b =>
                {
                    b.HasOne("BookingsWebApi.Models.CityModel", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("BookingsWebApi.Models.RoomModel", b =>
                {
                    b.HasOne("BookingsWebApi.Models.HotelModel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("BookingsWebApi.Models.CityModel", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("BookingsWebApi.Models.HotelModel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("BookingsWebApi.Models.RoomModel", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("BookingsWebApi.Models.UserModel", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
