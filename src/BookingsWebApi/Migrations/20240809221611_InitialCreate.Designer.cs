// <auto-generated />
using System;
using BookingsWebApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookingsWebApi.Migrations
{
    [DbContext(typeof(BookingsDbContext))]
    [Migration("20240809221611_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookingsWebApi.Models.BookingModel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GuestQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CheckIn = new DateTime(2023, 11, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            CheckOut = new DateTime(2023, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            GuestQuantity = 1,
                            RoomId = "1",
                            UserId = "1"
                        },
                        new
                        {
                            Id = "2",
                            CheckIn = new DateTime(2023, 11, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            CheckOut = new DateTime(2023, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            GuestQuantity = 1,
                            RoomId = "2",
                            UserId = "1"
                        },
                        new
                        {
                            Id = "3",
                            CheckIn = new DateTime(2023, 11, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            CheckOut = new DateTime(2023, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            GuestQuantity = 1,
                            RoomId = "3",
                            UserId = "2"
                        },
                        new
                        {
                            Id = "4",
                            CheckIn = new DateTime(2023, 11, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            CheckOut = new DateTime(2023, 11, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            GuestQuantity = 1,
                            RoomId = "4",
                            UserId = "2"
                        });
                });

            modelBuilder.Entity("BookingsWebApi.Models.CityModel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "City 1",
                            State = "State 1"
                        },
                        new
                        {
                            Id = "2",
                            Name = "City 2",
                            State = "State 2"
                        });
                });

            modelBuilder.Entity("BookingsWebApi.Models.HotelModel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("CityId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Address = "Address 1",
                            CityId = "1",
                            Name = "Hotel 1"
                        },
                        new
                        {
                            Id = "2",
                            Address = "Address 2",
                            CityId = "2",
                            Name = "Hotel 2"
                        });
                });

            modelBuilder.Entity("BookingsWebApi.Models.RoomModel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("HotelId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Capacity = 2,
                            HotelId = "1",
                            Image = "Image 1",
                            Name = "Room 1"
                        },
                        new
                        {
                            Id = "2",
                            Capacity = 1,
                            HotelId = "1",
                            Image = "Image 2",
                            Name = "Room 2"
                        },
                        new
                        {
                            Id = "3",
                            Capacity = 3,
                            HotelId = "1",
                            Image = "Image 3",
                            Name = "Room 3"
                        },
                        new
                        {
                            Id = "4",
                            Capacity = 2,
                            HotelId = "2",
                            Image = "Image 4",
                            Name = "Room 4"
                        },
                        new
                        {
                            Id = "5",
                            Capacity = 1,
                            HotelId = "2",
                            Image = "Image 5",
                            Name = "Room 5"
                        },
                        new
                        {
                            Id = "6",
                            Capacity = 3,
                            HotelId = "2",
                            Image = "Image 6",
                            Name = "Room 6"
                        });
                });

            modelBuilder.Entity("BookingsWebApi.Models.UserModel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Email = "user1@mail.com",
                            Name = "User 1",
                            Password = "Of5n7kc14AwibmiFXk5ZnyDbioxlCiqxcZr7ayc/ad4=",
                            Role = "Client",
                            Salt = "RDsG9pM5F0tj6ZIU2UogSA=="
                        },
                        new
                        {
                            Id = "2",
                            Email = "user2@mail.com",
                            Name = "User 2",
                            Password = "7eyPpIQlkJGpp/lfFJuSeJ3IZbo5DznSu/C1VG7JO9I=",
                            Role = "Client",
                            Salt = "Gqude0JZ38YVvz/RUTeZ9w=="
                        },
                        new
                        {
                            Id = "3",
                            Email = "user3@mail.com",
                            Name = "User 3",
                            Password = "sT+OPanSmual937atM35GfT2Xp1w5yPXpTBA4U8JdEo=",
                            Role = "Admin",
                            Salt = "pWIyxOGXD5363rNbX0ASfg=="
                        });
                });

            modelBuilder.Entity("BookingsWebApi.Models.BookingModel", b =>
                {
                    b.HasOne("BookingsWebApi.Models.RoomModel", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingsWebApi.Models.UserModel", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookingsWebApi.Models.HotelModel", b =>
                {
                    b.HasOne("BookingsWebApi.Models.CityModel", "City")
                        .WithMany("Hotels")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("BookingsWebApi.Models.RoomModel", b =>
                {
                    b.HasOne("BookingsWebApi.Models.HotelModel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("BookingsWebApi.Models.CityModel", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("BookingsWebApi.Models.HotelModel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("BookingsWebApi.Models.RoomModel", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("BookingsWebApi.Models.UserModel", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
